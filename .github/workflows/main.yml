name: Main Foodgram workflow

on:
  push:
    branches:
      - '*'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Test with Ruff
        uses: astral-sh/ruff-action@v3
        with:
          version: "0.12.x"

  build_and_push_backend_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_and_push_frontend_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_and_push_gateway_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push gateway to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub
      - build_and_push_gateway_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create .env file
        run: echo "${{ secrets.DOT_ENV }}" > .env

      - name: Copy .env file via ssh
        uses: appleboy/scp-action@master
        with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_KEY }}
           passphrase: ${{ secrets.SSH_PASSPHRASE }}
           source: ".env"
           target: "foodgram/"

      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_KEY }}
           passphrase: ${{ secrets.SSH_PASSPHRASE }}
           source: "infra/docker-compose.production.yml"
           target: "foodgram/infra/"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_KEY }}
           passphrase: ${{ secrets.SSH_PASSPHRASE }}
           script: |
             cd foodgram
             mkdir -p infra
             sudo docker compose -f infra/docker-compose.production.yml down
             sudo docker system prune -af
             sudo docker volume prune -f
             sudo docker builder prune -af
             sudo docker compose -f infra/docker-compose.production.yml pull
             sudo docker compose -f infra/docker-compose.production.yml -p foodgram up -d
             sudo apt clean
             sudo journalctl --vacuum-time=1d
          
  send_message:
     runs-on: ubuntu-latest
     needs: deploy
     steps:
       - name: Send message
         uses: appleboy/telegram-action@master
         with:
           to: ${{ secrets.TELEGRAM_TO }}
           token: ${{ secrets.TELEGRAM_TOKEN }}
           message: |
             Деплой успешно выполнен!
             Автор: ${{ github.actor }}
             Коммит: ${{ github.event.head_commit.message }}
             Ссылка: https://github.com/${{ github.repository }}/commit/${{ github.sha }}