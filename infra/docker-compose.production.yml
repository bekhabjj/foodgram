volumes:
  postgres_data:
  static:
  media:


services:
  db:
    container_name: db_PostgreSQL
    image: postgres:13.10
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: ../.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"] 
      interval: 5s
      timeout: 5s 
      retries: 30 

  backend:
    container_name: backend_Django
    image: bekhabjj/foodgram_backend:latest
    restart: always
    volumes:
      - static:/django_static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file: ../.env

  frontend:
    container_name: frontend_React
    image: bekhabjj/foodgram_frontend:latest
    command: cp -r /app/build/. /static/
    env_file: ../.env
    volumes:
      - static:/static

  gateway:
    container_name: proxy_Nginx
    image: bekhabjj/foodgram_gateway:latest
    ports:
      - "127.0.0.1:9003:80"
    volumes:
      - static:/staticfiles
      - media:/media
    restart: always
    depends_on:
      - backend
      - frontend
